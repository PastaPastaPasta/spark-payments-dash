/* MAIN CSS */

body {
	background: #ededed;
	font-family: Roboto;
	margin: 0;
	padding: 0;
}
.hidden {
	left: -9999px;
	position: absolute;
}
.mainBox {
	background: #ededed;
	width: 100%;
	text-align: center;
}
.headerImage {
	margin: 0px, 25px;
	margin-bottom: 25px;
}
.price {
	box-shadow: #1c75bc 0 0 1px 1px;
	background: #1c75bc;
	color: #fff;
	font-size: 2.7vh;
	font-family: Verdana;
	border: none;
	/*background: linear-gradient(to bottom, #fafafa, #eaeaea);
      -webkit-box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);
         -moz-box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);
              box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);*/
	border-radius: 40px;
	text-align: center;
	width: 75%;
	height: 6.8vh;
	margin: auto;
	margin-top: 10px;
	padding-top: 25px;
}
.mainButton {
	box-shadow: #1c75bc 0 0 1px 1px;
	background: #ededed;
	color: #7e7e7e;
	font-size: 6vh;
	border: none;
	/*background: linear-gradient(to bottom, #fafafa, #eaeaea);
      -webkit-box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);
         -moz-box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);
              box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);*/
	border-radius: 30px;
	text-align: center;
	width: 90%;
	height: 14vh;
	margin: 7px 20px;
	padding: 0;
}
.mainButton:hover {
	box-shadow: #1c75bc 0 0 1px 1px;
}
.mainButton:active {
	background: #1c75bc;
	color: #fff;
	-webkit-transform: scale3d(0.9, 0.9, 1);
}
.mainButton:focus {
	-webkit-tap-highlight-color: rgba(255, 255, 255, 0);
	-webkit-tap-highlight-color: transparent;
}
.bottomNav {
	position: fixed;
	width: 100%;
	bottom: 3%;
}
.connected {
	color: #47cf73;
}
.notConnected {
	color: #ff3c41;
}
.InputAddOn {
	display: flex;
	background: #ededed;
	margin: 3.5%;
	width: 92%;
	text-align: center;
	margin-bottom: 0px;
}
.InputAddOn-field {
	flex: 1;
	font-size: 3em;
	width: 92%;
	background: #ededed;
	text-align: center;
}
.InputAddOn-field:not(:first-child) {
	border-left: 0;
}
.InputAddOn-item {
	background-color: rgba(147, 128, 108, 0.1);
	color: #666666;
	font: inherit;
	font-size: 1em;
	font-weight: normal;
	padding: 1.2em .5em 1.2em .5em;
}
.InputAddOn-field,
.InputAddOn-item {
	border: 1px solid #d5d5d5;
}
.InputAddOn-field:last-child,
.InputAddOn-item:last-child {
	border-radius: 0 2px 2px 0;
}

/* END MAIN */


/* SETTINGS */

.input {
	background: #ededed;
	margin: 3.5%;
	width: 92%;
	font-size: 2em;
	text-align: center;
	border: 1px solid #d5d5d5;
}
.label {
	margin: 0px 0px 0px 4%;
	text-align: left;
	font-size: 1em;
	font-family: Verdana;
}
#alert {
	background: #ededed;
	margin: 2%;
	padding: 3%;
	width: 90%;
	font-size: 1em;
	text-align: center;
	border-radius: 10px;
	color: #ededed;
	font-family: Verdana;
}

/* END SETTINGS */


/* QR */

img.center {
	display: block;
	margin: 0 auto;
}
#txInfo {
	margin: 3.5%;
	width: 92%;
	font-size: 4vh;
	text-align: center;
	font-family: Verdana;
	color: #1c75bc;
}
#confirm {
	margin: 3.5%;
	width: 92%;
	font-size: 1.5em;
	text-align: center;
	font-family: Verdana;
	color: #7e7e7e;
}
@keyframes blink {
	/**
     * At the start of the animation the dot
     * has an opacity of .2
     */
	0% {
		opacity: .2;
	}
	/**
     * At 20% the dot is fully visible and
     * then fades out slowly
     */
	20% {
		opacity: 1;
	}
	/**
     * Until it reaches an opacity of .2 and
     * the animation can start again
     */
	100% {
		opacity: .2;
	}
}
.waiting span {
	/**
     * Use the blink animation, which is defined above
     */
	animation-name: blink;
	/**
     * The animation should take 1.4 seconds
     */
	animation-duration: 1.4s;
	/**
     * It will repeat itself forever
     */
	animation-iteration-count: infinite;
	/**
     * This makes sure that the starting style (opacity: .2)
     * of the animation is applied before the animation starts.
     * Otherwise we would see a short flash or would have
     * to set the default styling of the dots to the same
     * as the animation. Same applies for the ending styles.
     */
	animation-fill-mode: both;
}
.waiting span:nth-child(2) {
	/**
     * Starts the animation of the third dot
     * with a delay of .2s, otherwise all dots
     * would animate at the same time
     */
	animation-delay: .2s;
}
.waiting span:nth-child(3) {
	/**
     * Starts the animation of the third dot
     * with a delay of .4s, otherwise all dots
     * would animate at the same time
     */
	animation-delay: .4s;
}

/* END QR */